/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}
 */
 /* tslint:disable */


import * as i0 from '@angular/core';
import * as i1 from '@angular/forms';
import * as i2 from 'ng-formly/lib/src/core/components/formly.attributes';
import * as i3 from '@angular/common';
import * as i4 from 'ng-formly/lib/src/ui-bootstrap/types/multicheckbox';
const styles_FormlyFieldMultiCheckbox:any[] = ([] as any[]);
export const RenderType_FormlyFieldMultiCheckbox:i0.RendererType2 = i0.ɵcrt({encapsulation:2,
    styles:styles_FormlyFieldMultiCheckbox,data:{}});
function View_FormlyFieldMultiCheckbox_1(_l:any):i0.ɵViewDefinition {
  return i0.ɵvid(0,[(_l()(),i0.ɵeld(0,(null as any),(null as any),14,'div',[['class',
      'checkbox']],(null as any),(null as any),(null as any),(null as any),(null as any))),
      (_l()(),i0.ɵted((null as any),['\n        '])),(_l()(),i0.ɵeld(0,(null as any),
          (null as any),11,'label',[['class','custom-control custom-checkbox']],(null as any),
          (null as any),(null as any),(null as any),(null as any))),(_l()(),i0.ɵted((null as any),
          ['\n            '])),(_l()(),i0.ɵeld(0,(null as any),(null as any),6,'input',
          [['class','custom-control-input'],['type','checkbox']],[[8,'value',0],[2,
              'ng-untouched',(null as any)],[2,'ng-touched',(null as any)],[2,'ng-pristine',
              (null as any)],[2,'ng-dirty',(null as any)],[2,'ng-valid',(null as any)],
              [2,'ng-invalid',(null as any)],[2,'ng-pending',(null as any)]],[[(null as any),
              'change'],[(null as any),'blur'],[(null as any),'focus']],(_v,en,$event) => {
            var ad:boolean = true;
            if (('change' === en)) {
              const pd_0:any = ((<any>i0.ɵnov(_v,5).onChange($event.target.checked)) !== false);
              ad = (pd_0 && ad);
            }
            if (('blur' === en)) {
              const pd_1:any = ((<any>i0.ɵnov(_v,5).onTouched()) !== false);
              ad = (pd_1 && ad);
            }
            if (('focus' === en)) {
              const pd_2:any = ((<any>i0.ɵnov(_v,10).onFocus()) !== false);
              ad = (pd_2 && ad);
            }
            if (('blur' === en)) {
              const pd_3:any = ((<any>i0.ɵnov(_v,10).onBlur()) !== false);
              ad = (pd_3 && ad);
            }
            return ad;
          },(null as any),(null as any))),i0.ɵdid(16384,(null as any),0,i1.CheckboxControlValueAccessor,
          [i0.Renderer,i0.ElementRef],(null as any),(null as any)),i0.ɵprd(1024,(null as any),
          i1.NG_VALUE_ACCESSOR,(p0_0:any) => {
            return [p0_0];
          },[i1.CheckboxControlValueAccessor]),i0.ɵdid(540672,(null as any),0,i1.FormControlDirective,
          [[8,(null as any)],[8,(null as any)],[2,i1.NG_VALUE_ACCESSOR]],{form:[0,
              'form']},(null as any)),i0.ɵprd(2048,(null as any),i1.NgControl,(null as any),
          [i1.FormControlDirective]),i0.ɵdid(16384,(null as any),0,i1.NgControlStatus,
          [i1.NgControl],(null as any),(null as any)),i0.ɵdid(540672,(null as any),
          0,i2.FormlyAttributes,[i0.Renderer,i0.ElementRef],{field:[0,'field'],formControl:[1,
              'formControl']},(null as any)),(_l()(),i0.ɵted((null as any),['\n            ',
          '\n            '])),(_l()(),i0.ɵeld(0,(null as any),(null as any),0,'span',
          [['class','custom-control-indicator']],(null as any),(null as any),(null as any),
          (null as any),(null as any))),(_l()(),i0.ɵted((null as any),['\n        '])),
      (_l()(),i0.ɵted((null as any),['\n    ']))],(_ck,_v) => {
    var _co:any = _v.component;
    const currVal_8:any = _co.formControl.get(_v.context.$implicit.key);
    _ck(_v,7,0,currVal_8);
    const currVal_9:any = _co.field;
    const currVal_10:any = _co.formControl.get(_v.context.$implicit.key);
    _ck(_v,10,0,currVal_9,currVal_10);
  },(_ck,_v) => {
    const currVal_0:any = _v.context.$implicit.value;
    const currVal_1:any = i0.ɵnov(_v,9).ngClassUntouched;
    const currVal_2:any = i0.ɵnov(_v,9).ngClassTouched;
    const currVal_3:any = i0.ɵnov(_v,9).ngClassPristine;
    const currVal_4:any = i0.ɵnov(_v,9).ngClassDirty;
    const currVal_5:any = i0.ɵnov(_v,9).ngClassValid;
    const currVal_6:any = i0.ɵnov(_v,9).ngClassInvalid;
    const currVal_7:any = i0.ɵnov(_v,9).ngClassPending;
    _ck(_v,4,0,currVal_0,currVal_1,currVal_2,currVal_3,currVal_4,currVal_5,currVal_6,
        currVal_7);
    const currVal_11:any = _v.context.$implicit.value;
    _ck(_v,11,0,currVal_11);
  });
}
export function View_FormlyFieldMultiCheckbox_0(_l:any):i0.ɵViewDefinition {
  return i0.ɵvid(0,[(_l()(),i0.ɵted((null as any),['\n    '])),(_l()(),i0.ɵand(16777216,
      (null as any),(null as any),1,(null as any),View_FormlyFieldMultiCheckbox_1)),
      i0.ɵdid(802816,(null as any),0,i3.NgForOf,[i0.ViewContainerRef,i0.TemplateRef,
          i0.IterableDiffers],{ngForOf:[0,'ngForOf']},(null as any)),(_l()(),i0.ɵted((null as any),
          ['\n  ']))],(_ck,_v) => {
    var _co:i4.FormlyFieldMultiCheckbox = _v.component;
    const currVal_0:any = _co.to.options;
    _ck(_v,2,0,currVal_0);
  },(null as any));
}
export function View_FormlyFieldMultiCheckbox_Host_0(_l:any):i0.ɵViewDefinition {
  return i0.ɵvid(0,[(_l()(),i0.ɵeld(0,(null as any),(null as any),1,'formly-field-multicheckbox',
      ([] as any[]),(null as any),(null as any),(null as any),View_FormlyFieldMultiCheckbox_0,
      RenderType_FormlyFieldMultiCheckbox)),i0.ɵdid(16760832,(null as any),0,i4.FormlyFieldMultiCheckbox,
      ([] as any[]),(null as any),(null as any))],(_ck,_v) => {
    _ck(_v,1,0);
  },(null as any));
}
export const FormlyFieldMultiCheckboxNgFactory:i0.ComponentFactory<i4.FormlyFieldMultiCheckbox> = i0.ɵccf('formly-field-multicheckbox',
    i4.FormlyFieldMultiCheckbox,View_FormlyFieldMultiCheckbox_Host_0,{form:'form',
        field:'field',model:'model',options:'options'},{},([] as any[]));
//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiRTovRE9XTkxPQURTIDIwMTAvU29mbGV4L05QTS9uZ3gtZm9ybWx5LWNvbXBvbmVudHMvbm9kZV9tb2R1bGVzL25nLWZvcm1seS9saWIvc3JjL3VpLWJvb3RzdHJhcC90eXBlcy9tdWx0aWNoZWNrYm94Lm5nZmFjdG9yeS50cyIsInZlcnNpb24iOjMsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm5nOi8vL0U6L0RPV05MT0FEUyAyMDEwL1NvZmxleC9OUE0vbmd4LWZvcm1seS1jb21wb25lbnRzL25vZGVfbW9kdWxlcy9uZy1mb3JtbHkvbGliL3NyYy91aS1ib290c3RyYXAvdHlwZXMvbXVsdGljaGVja2JveC5kLnRzIiwibmc6Ly8vRTovRE9XTkxPQURTIDIwMTAvU29mbGV4L05QTS9uZ3gtZm9ybWx5LWNvbXBvbmVudHMvbm9kZV9tb2R1bGVzL25nLWZvcm1seS9saWIvc3JjL3VpLWJvb3RzdHJhcC90eXBlcy9tdWx0aWNoZWNrYm94LmQudHMuRm9ybWx5RmllbGRNdWx0aUNoZWNrYm94Lmh0bWwiLCJuZzovLy9FOi9ET1dOTE9BRFMgMjAxMC9Tb2ZsZXgvTlBNL25neC1mb3JtbHktY29tcG9uZW50cy9ub2RlX21vZHVsZXMvbmctZm9ybWx5L2xpYi9zcmMvdWktYm9vdHN0cmFwL3R5cGVzL211bHRpY2hlY2tib3guZC50cy5Gb3JtbHlGaWVsZE11bHRpQ2hlY2tib3hfSG9zdC5odG1sIl0sInNvdXJjZXNDb250ZW50IjpbIiAiLCJcbiAgICA8ZGl2ICpuZ0Zvcj1cImxldCBvcHRpb24gb2YgdG8ub3B0aW9uc1wiIGNsYXNzPVwiY2hlY2tib3hcIj5cbiAgICAgICAgPGxhYmVsIGNsYXNzPVwiY3VzdG9tLWNvbnRyb2wgY3VzdG9tLWNoZWNrYm94XCI+XG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgW3ZhbHVlXT1cIm9wdGlvbi52YWx1ZVwiIFtmb3JtQ29udHJvbF09XCJmb3JtQ29udHJvbC5nZXQob3B0aW9uLmtleSlcIlxuICAgICAgICAgICAgW2Zvcm1seUF0dHJpYnV0ZXNdPVwiZmllbGRcIiBjbGFzcz1cImN1c3RvbS1jb250cm9sLWlucHV0XCI+XG4gICAgICAgICAgICB7e29wdGlvbi52YWx1ZX19XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImN1c3RvbS1jb250cm9sLWluZGljYXRvclwiPjwvc3Bhbj5cbiAgICAgICAgPC9sYWJlbD5cbiAgICA8L2Rpdj5cbiAgIiwiPGZvcm1seS1maWVsZC1tdWx0aWNoZWNrYm94PjwvZm9ybWx5LWZpZWxkLW11bHRpY2hlY2tib3g+Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JDQ0k7TUFBQTtNQUF3RCwrQ0FDcEQ7VUFBQTtVQUFBLDBEQUE4QztVQUFBLHFCQUMxQztVQUFBO2NBQUE7Y0FBQTtjQUFBO2NBQUE7WUFBQTtZQUFBO2NBQUE7Y0FBQTtZQUFBO1lBQUE7Y0FBQTtjQUFBO1lBQUE7WUFBQTtjQUFBO2NBQUE7WUFBQTtZQUFBO2NBQUE7Y0FBQTtZQUFBO1lBQUE7VUFBQSx1Q0FBQTtVQUFBLGdFQUFBOytCQUFBO1lBQUE7VUFBQSw0Q0FBQTtVQUFBO2NBQUEsK0JBQUE7VUFBQSxrQ0FBQTtVQUFBLG1EQUFBO1VBQUE7Y0FBQSwrQkFDd0Q7VUFBQSxvQkFFeEQ7VUFBQTtVQUFBLDhCQUE4QztNQUMxQzs7SUFKMEM7SUFBOUMsV0FBOEMsU0FBOUM7SUFDQTtJQUQ4QztJQUE5QyxZQUNBLFVBRDhDLFVBQTlDOztJQUF1QjtJQUF2QjtJQUFBO0lBQUE7SUFBQTtJQUFBO0lBQUE7SUFBQTtJQUFBLFdBQXVCLFVBQXZCO1FBQUEsU0FBQTtJQUN3RDtJQUFBOzs7O29CQUpwRSwyQ0FDSTtNQUFBO2FBQUE7NEJBQUEseUNBT007VUFBQTs7SUFQRDtJQUFMLFdBQUssU0FBTDs7OztvQkNESjtNQUFBO3lDQUFBLFVBQUE7TUFBQTtJQUFBOzs7OzsifQ==
